# Config for leader arm (simple single-servos per joint)
# Run `lerobot calibrate lerobot/configs/robot/leader.yaml` to calibrate offsets, limits, etc.
# Assumes all joints angular (rad), including gripper (treat as rotary if basic; adjust if linear)
# Update camera if different

fps: 30  # Frame rate for recording/eval

robot_type: custom_feetech_arm.CustomFeetechArm  # Points to your custom class

arms:
  leader:  # Single arm setup
    bus:
      type: feetech
      port: /dev/ttyUSB1
      baud_rate: 1000000  # Standard for Feetech STS3215
    default_speed: 500  # From your code
    actuators:
      base_link_Revolute-1:  # Use consistent joint names; adjust as needed
        id: 1
        model: sts3215
        offset_rad: 0.0  # Initial; calibrate will update
        orientation: 1
        scale: 651.0  # Approx 2048 / pi; fine-tune if needed
      link1_Revolute-3:
        id: 2
        model: sts3215
        offset_rad: 0.0
        orientation: 1
        scale: 651.0
      link2_Revolute-4:
        id: 3
        model: sts3215
        offset_rad: 0.0
        orientation: 1
        scale: 651.0
      link3_Revolute-5:
        id: 4
        model: sts3215
        offset_rad: 0.0
        orientation: 1
        scale: 651.0
      link4_Revolute-6:
        id: 5
        model: sts3215
        offset_rad: 0.0
        orientation: 1
        scale: 651.0
      link5_Revolute-7:
        id: 6
        model: sts3215
        offset_rad: 0.0
        orientation: 1
        scale: 651.0
      link6_Slider-8:  # Gripper; assuming angular for leader basic; if linear, use custom class in robot.py
        id: 7
        model: sts3215
        offset_rad: 0.0
        orientation: 1
        scale: 651.0

cameras:
  main:  # Example Logitech C270
    type: v4l2
    video_id: 0  # /dev/video0; confirm with `v4l2-ctl --list-devices`
    width: 640
    height: 480
    fps: 30

# After calibration, this section will be populated/updated
calibration: {}